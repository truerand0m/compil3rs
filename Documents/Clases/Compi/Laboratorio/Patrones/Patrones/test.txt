java Parser primeraPrac.py
loop
yyn:0  state:0  yychar:-1
 next yychar:279
state 0, shifting to state 5
loop
yyn:0  state:5  yychar:-1
 next yychar:260
state 5, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 5 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:281
reduce
state 12, reducing 1 by rule 14 (power : atom)
reduce
after reduction, shifting from state 5 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 5 to state 13
loop
state 13, reducing 2 by rule 11 (factor : MAS factor)
reduce
after reduction, shifting from state 0 to state 10
loop
yyn:0  state:10  yychar:281
state 10, shifting to state 18
loop
yyn:0  state:18  yychar:-1
 next yychar:260
state 18, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 18 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:282
state 12, shifting to state 22
loop
yyn:0  state:22  yychar:-1
 next yychar:260
state 22, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 22 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:279
reduce
state 12, reducing 1 by rule 14 (power : atom)
reduce
after reduction, shifting from state 22 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 22 to state 29
loop
state 29, reducing 3 by rule 15 (power : atom POTENCIA factor)
reduce
after reduction, shifting from state 18 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 18 to state 10
loop
yyn:0  state:10  yychar:279
reduce
state 10, reducing 1 by rule 6 (term : factor)
reduce
after reduction, shifting from state 18 to state 25
loop
state 25, reducing 3 by rule 7 (term : factor POR term)
reduce
after reduction, shifting from state 0 to state 9
loop
yyn:0  state:9  yychar:279
state 9, shifting to state 16
loop
yyn:0  state:16  yychar:-1
 next yychar:260
state 16, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 16 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:281
reduce
state 12, reducing 1 by rule 14 (power : atom)
reduce
after reduction, shifting from state 16 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 16 to state 10
loop
yyn:0  state:10  yychar:281
state 10, shifting to state 18
loop
yyn:0  state:18  yychar:-1
 next yychar:260
state 18, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 18 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:279
reduce
state 12, reducing 1 by rule 14 (power : atom)
reduce
after reduction, shifting from state 18 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 18 to state 10
loop
yyn:0  state:10  yychar:279
reduce
state 10, reducing 1 by rule 6 (term : factor)
reduce
after reduction, shifting from state 18 to state 25
loop
state 25, reducing 3 by rule 7 (term : factor POR term)
reduce
after reduction, shifting from state 16 to state 9
loop
yyn:0  state:9  yychar:279
state 9, shifting to state 16
loop
yyn:0  state:16  yychar:-1
 next yychar:260
state 16, shifting to state 3
loop
state 3, reducing 1 by rule 17 (atom : ENTERO)
reduce
after reduction, shifting from state 16 to state 12
loop
yyn:0  state:12  yychar:-1
 next yychar:258
reduce
state 12, reducing 1 by rule 14 (power : atom)
reduce
after reduction, shifting from state 16 to state 11
loop
state 11, reducing 1 by rule 13 (factor : power)
reduce
after reduction, shifting from state 16 to state 10
loop
yyn:0  state:10  yychar:258
reduce
state 10, reducing 1 by rule 6 (term : factor)
reduce
after reduction, shifting from state 16 to state 9
loop
yyn:0  state:9  yychar:258
reduce
state 9, reducing 1 by rule 3 (arith_expr : term)
reduce
after reduction, shifting from state 16 to state 23
loop
state 23, reducing 3 by rule 4 (arith_expr : term MAS arith_expr)
reduce
after reduction, shifting from state 16 to state 23
loop
state 23, reducing 3 by rule 4 (arith_expr : term MAS arith_expr)
reduce
after reduction, shifting from state 0 to state 8
loop
yyn:0  state:8  yychar:258
state 8, shifting to state 15
loop
state 15, reducing 2 by rule 2 (input : arith_expr NEWLINE)
Llegue a input
*****************************
Nodo Arith :

Izq[

Izq[
Nodo factor: + 
Soy hoja entera: class IntLeaf : 5
]
*
Der[
Soy hoja entera: class IntLeaf : 5
**
Soy hoja entera: class IntLeaf : 3
]
]
+
Der[
Nodo Arith :

Izq[

Izq[
Soy hoja entera: class IntLeaf : 3
]
*
Der[
Soy hoja entera: class IntLeaf : 1
]
]
+
Der[
Soy hoja entera: class IntLeaf : 7
]
]
*****************************
--------------------------Arbol---------------------
              (Ar:+)              
        (T:* )                (Ar:+)        
   (F:+ )      (**  )      (T:* )      (I:7 )   
(I:5 )(    )(I:5 )(I:3 )(I:3 )(I:1 )(    )(    )
----------------------------------------------------
reduce
After reduction, shifting from state 0 to state 7
state 7, reading 0 (end-of-file)
